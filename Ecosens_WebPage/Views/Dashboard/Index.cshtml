@model DashboardViewModel
@{
    Layout = "~/Views/Shared/_ControlPanelLayout.cshtml";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <p class="fw-bold fs-4">DASHBOARD</p>
    </div>

    <div class="row g-4">

        <div class="col-md-3">
            <div class="cards rounded-3 border-start border-5 border-primary shadow-sm h-100">
                <div class=" d-flex justify-content-between align-items-center">
                    <p class="mb-0 fs-5 text-secondary">PET</p>
                    <span class="material-icons-outlined fs-2 text-primary">recycling</span>
                </div>
                <div class=" fw-semibold fs-5 text-secondary fw-bold">@Model.Plastico</div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="cards rounded-3 border-start border-5 border-warning shadow-sm h-100">
                <div class=" d-flex justify-content-between align-items-center">
                    <p class="mb-0 fs-5 text-secondary">Metal</p>
                    <span class="material-icons-outlined fs-2 text-warning">recycling</span>
                </div>
                <div class=" fw-semibold fs-5 text-secondary fw-bold">@Model.Metal</div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="cards rounded-3 border-start border-5 border-success shadow-sm h-100">
                <div class=" d-flex justify-content-between align-items-center">
                    <p class="mb-0 fs-5 text-secondary">Total</p>
                    <span class="material-icons-outlined fs-2 text-success">recycling</span>
                </div>
                <div class=" fw-semibold fs-5 text-secondary fw-bold">@Model.Total</div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="cards rounded-3 border-start border-5 border-danger shadow-sm h-100">
                <div class=" d-flex justify-content-between align-items-center">
                    <p class="mb-0 fs-5 text-secondary ">Alertas (hoy)</p>
                    <span class="material-icons-outlined fs-2 text-danger">notification_important</span>
                </div>
                <div class="fw-semibold fs-5 text-secondary fw-bold">@Model.TotalAlertas</div>
            </div>
        </div>

    </div>

    <div class="row mt-5 g-4">
        <div class="col-md-6">
            <div class="card charts-card p-3 shadow-sm">
                <p class="chart-title text-center">Zonas con mayor recolección de basura</p>
                <div id="bar-chart" style="min-height: 250px;"></div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card charts-card p-3 shadow-sm">
                <p class="chart-title text-center">Cantidad de plásticos y metales (Últimos meses)</p>
                <div id="area-chart" style="min-height: 250px;"></div>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    <script>
        let sidebarOpen = false;
        const sidebar = document.getElementById('sidebar');

        function openSidebar() {
          if (!sidebarOpen) {
            sidebar.classList.add('sidebar-responsive');
            sidebarOpen = true;
          }
        }

        function closeSidebar() {
          if (sidebarOpen) {
            sidebar.classList.remove('sidebar-responsive');
            sidebarOpen = false;
          }
        }

        // ---------- GRAFICAS ----------

         const barChartOptions = {
          series: [{ data: [] }],
          chart: {
            type: 'bar',
            height: 350,
            toolbar: { show: false }
          },
          colors: ['#246dec', '#cc3c43', '#367952', '#f5b74f', '#4f35a1'],
          plotOptions: {
            bar: {
              distributed: true,
              borderRadius: 4,
              horizontal: false,
              columnWidth: '40%',
            },
          },
          dataLabels: { enabled: false },
          legend: { show: false },
          xaxis: {
            categories: [] // ← esto se llenará dinámicamente
          },
          yaxis: {
            title: { text: 'Cantidad' }
          }
        };

         fetch('https://localhost:7187/api/Registros/peso-total-por-area')
        .then(res => res.json())
        .then(data => {
          console.log('Datos JSON:', data);
          barChartOptions.series[0].data = data.data;
          barChartOptions.xaxis.categories = data.categories;

          const barChart = new ApexCharts(
            document.querySelector('#bar-chart'),
            barChartOptions
          );
          barChart.render();
        })
        .catch(error => {
          console.error('Error al cargar la gráfica de barras:', error);
        });

        // AREA

        const areaChartOptions = {
          series: [],
          chart: {
            type: 'area',
            height: 350,
            toolbar: { show: false }
          },
          colors: ['#4f35a1', '#246dec'],
          dataLabels: { enabled: false },
          stroke: { curve: 'smooth' },
          labels: [],
          markers: { size: 0 },
          yaxis: [{
            opposite: true,
            title: { text: 'Cantidad (kg)' }
          }],
          tooltip: {
            shared: true,
            intersect: false
          }
        };

        fetch('https://localhost:7187/api/Registros/estadisticas/pesos-mensuales') // Ajusta si la ruta es distinta
        .then(response => response.json())
        .then(data => {
          areaChartOptions.series = data.series;
          areaChartOptions.labels = data.labels;

          const areaChart = new ApexCharts(
            document.querySelector('#area-chart'),
            areaChartOptions
          );
          areaChart.render();
        })
        .catch(error => {
          console.error('Error al cargar datos para el gráfico:', error);
        });
        const areaChart = new ApexCharts(
          document.querySelector('#area-chart'),
          areaChartOptions
        );
    </script>
}